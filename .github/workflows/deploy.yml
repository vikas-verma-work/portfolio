name: 🚀 Deploy Next.js 15 + React 19 to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🕵️ Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "install-command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "run-command=pnpm" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install-command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "run-command=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install-command=ci --legacy-peer-deps" >> $GITHUB_OUTPUT
            echo "run-command=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: 🧱 Setup pnpm (if needed)
        if: steps.detect-package-manager.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🧩 Setup GitHub Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: 💾 Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml', '**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: 📦 Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.install-command }}

      - name: 🏗️ Build Next.js app
        run: ${{ steps.detect-package-manager.outputs.run-command }} next build

      - name: 🌐 Export static site
        run: ${{ steps.detect-package-manager.outputs.run-command }} next export

      - name: 📤 Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
